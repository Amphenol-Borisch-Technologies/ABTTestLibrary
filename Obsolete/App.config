<?xml version="1.0" encoding="utf-8"?>
<configuration>
	<configSections>
		<section name="InstrumentElementsSection" type="ABTTestLibrary.AppConfig.InstrumentElementsSection, ABTTestLibrary" />
		<section name="GroupElementsSection" type="ABTTestLibrary.AppConfig.GroupElementsSection, ABTTestLibrary" />
		<section name="GroupsToTestsElementsSection" type="ABTTestLibrary.AppConfig.GroupsToTestsElementsSection, ABTTestLibrary" />
		<section name="TestElementsSection" type="ABTTestLibrary.AppConfig.TestElementsSection, ABTTestLibrary" />
	</configSections>
	<appSettings>
		<!-- App.-->
		<!-- Standard ABTTestLibApp configuration settings, specific to the test application.-->
		<add key="APP_Revision" value="1.0" />
		<add key="APP_TestEventsEnabled" value="true" />
		<!-- See https://github.com/Amphenol-Borisch-Technologies/TestEvents -->
		<!-- Standard ABTTestLibApp Logger configuation settings, specific to the Logger sub-system.-->
		<add key="LOGGER_FileEnabled" value="true" />
		<!-- LOGGER_FileEnabled & LOGGER_SQLEnabled are independent of each other. -->
		<!-- Can choose to Log to Text only, SQL only, both Text & SQL or neither, depending what the Customer requires. -->
		<add key="LOGGER_FilePath" value="P:\Test\TDR\D4522137\Functional\" />
		<!-- Text Log Paths are only relevant if LOGGER_FileEnabled is true. -->
		<add key="LOGGER_SQLEnabled" value="false" />
		<!-- LOGGER_FileEnabled & LOGGER_SQLEnabled are independent of each other. -->
		<!-- Can choose to Log to Text only, SQL only, both Text & SQL or neither, depending what the Customer requires. -->
		<add key="LOGGER_SQLConnectionString" value="" />
		<!--  SQL connection string only relevant if LOGGER_SQLEnabled is true. -->
		<!-- Standard ABTTestLibApp UUT configuration settings, specific to the Unit Under Test. -->
		<add key="UUT_Customer" value="UUT_Customer" />
		<add key="UUT_Type" value="UUT_Type" />
		<!-- System, Unit, Sub-Unit, CCA, Component, etc. -->
		<add key="UUT_Number" value="UUT_Number" />
		<add key="UUT_Revision" value="UUT_Revision" />
		<add key="UUT_Description" value="UUT_Description" />
		<add key="UUT_TestSpecification" value="UUT_TestSpecification" />
		<!-- Custom configuration settings specific to this APP, LOG or UUT, and not provided by their standard configurations from ABTTestLibrary. -->
		<!-- These settings should be initialized in a local library specific to the test program/application. -->
		<add key="CUSTOM_SMBusAddress" value="40" />
		<!-- System Management Bus device address, in hexadecimal format. -->
	</appSettings>
	<GroupElementsSection>
		<!--				
			Name			:	Status		:	.Net Type		:	Purpose											Notes(s)
			=============   :	=========   :	=============   :   ====================================		:	==========================================================
			ID				:	Required	:	System.String	:	Unique Identifier							:   Unique Identifier; no 2 can be identical, ID is key in a Dictionary object.
																													Suggest T-10, T-20, T-30, T-40... ABT FilePro Traveler Test Operations.
																													Recommend alpha-numerically ordering to avoid duplications,
																													which throw Exceptions.
			Required		:	Required	:	System.Boolean	:	Does Customer require running this Group?	:	Enables Groups of Tests useful for troubleshooting UUTs
																											`		to also be run by test operator.  Non-required Groups
																													however will not create valid test data nor report overall
																													UUT results, just Group results.
																													Multiple Groups can be required, if there are multiple
																													FilePro Test Operations; T-10, T-T20, T-30...
																													Recommend ordering all Required Groups by Test Operation,
																													then non-Required as desired.
			SequenceNumber	:	Required	:	System.Int32	:	GroupSelection display order				:	Begin at 0, increment by 1.
			Summary			:	Required	:	System.String	:	Concise description of Group				:	PowerUp performs all power application tests.
			Detail			:	Optional	:	System.String	:	Optional verbose description of Group		:	PowerUp:
																													- Apply/measure +28V.
																													- Apply/measure +5V.
																													- Apply/measure +3.3V.
																													- Measure derived ±12.0V
																													- Measure derived +2.5V
																													- Measure derived +1.8V
																													- Measure derived +1.2V
		-->
		<!--ABT Test Operations to Raytheon 0001624557 Test Paragraphs:
			T-10: 5.1 SSTO Flying Probe, P00010.
			T-20: 5.2 Inductance Check, P00050.
			T-30: 5.3 Initial Power Up, P00100 - P00200.
				  5.4 UUT Programming, P00300 - P00600.
				  5.5 Initial Configuration, P00700 - P00750.
				  5.6 Power Stage Health Check, P00800 - P10200.
			T-40: 6.0 Calibration & Final Test, P10300 - P11800.
		-->
		<GroupElements>
			<GroupElement ID="ID0" Required="false" SequenceNumber="0" Summary="Summary0" Detail="Detail0" />
			<GroupElement ID="ID1" Required="true" SequenceNumber="1" Summary="Summary1" Detail="Detail1" />
			<GroupElement ID="ID2" Required="true" SequenceNumber="2" Summary="Summary2" Detail="Detail2" />
			<!-- Spaces are permitted in GroupElement fields. -->
		</GroupElements>
	</GroupElementsSection>
	<GroupsToTestsElementsSection>
		<!--				
			Name			:	Status		:	.Net Type		:	Purpose										Notes(s)
			=============   :	=========   :	=============   :   ====================================	:	============
			IDGroup			:	Required	:	System.String	:	Unique GroupElement Identifier			:   IDGroup must be a Unique Identifier; no 2 can be identical.
																												Each IDGroup must also exist as a GroupElement ID.
			IDTests			:	Required	:	System.String	:	Unique TestElement Identifier(s)		:	1 or more TestElement IDs, separated by '|'.
																												Each ID in IDTests must exist as a TestElement ID.
																												Recommend alpha-numerically ordering to avoid duplications,
																												which are deleted.
		-->
		<GroupsToTestsElements>
			<GroupsToTestsElement IDGroup="ID0" IDTests="ID0" />
			<GroupsToTestsElement IDGroup="ID1" IDTests="ID0|ID1" />
			<GroupsToTestsElement IDGroup="ID2" IDTests="ID0|ID1|ID2" />
			<!-- Use character '|' to separate IDTests. -->
			<!-- Thus TestElement IDs cannot contain character '|' in them. -->
		</GroupsToTestsElements>
	</GroupsToTestsElementsSection>
	<TestElementsSection>
		<!--				
			Name			:	Status		:	.Net Type		:	Purpose										Notes(s)
			=============   :	=========   :	=============   :   ====================================	:	==========================================================
			ID				:	Required	:	System.String	:	Unique Identifier						:	Unique Identifier; no 2 can be identical, ID is key in a Dictionary object.
																												P00100, P00200, P00300...
			SequenceNumber	:	Required	:	System.Int32	:	Sequence Tests are executed				:	Begin at 0, increment by 1.
			Summary			:	Required	:	System.String	:	Concise description of Test				:	Apply/measure +5V DC Input Voltage pre-programming.
			Detail			:	Optional	:	System.String	:	Optional verbose description of Test	:	Apply +5V DC Voltage from +Vcc to GND.
																												- Limit current to 0.75 Amps.
																												- Measure voltage after 2.0 seconds delay.
																												- Perform test before U6 µController and U7
																												  EEPROM are programmed.
			LimitLow		:	Optional	:	System.Double	:	Test's low limit						:	5.25, for 5.0VDC with +5% tolerance
			LimitHigh		:	Optional	:	System.Double	:	Test's high limit						:	4.75, for 5.0VDC with -5% tolerance
			Units			:	Optional	:	System.String	:	SI Base/Derived Units + Metric Prefixes	:	mA (milli Amps), µV (micro Volts), etc.
		-->
		<!-- Use character '|' to separate GroupsToTestsElement IDTests. -->
		<!-- Thus TestElement IDs cannot contain character '|' in them. -->
		<!-- OK     : ID="Test ID001"  -->
		<!-- Not OK : ID="Test ID|001" -->
		<TestElements>
			<TestElement ID="ID0" SequenceNumber="0" Summary="Summary0" Detail="Detail0" LimitLow=""			LimitHigh=""			Units="Units0" />
			<TestElement ID="ID1" SequenceNumber="1" Summary="Summary1" Detail="Detail1" LimitLow=""			LimitHigh="LimitHigh"	Units="Units1" />
			<TestElement ID="ID2" SequenceNumber="2" Summary="Summary2" Detail="Detail2" LimitLow="LimitLow" LimitHigh=""			Units="Units2" />
			<TestElement ID="ID3" SequenceNumber="3" Summary="Summary3" Detail="Detail3" LimitLow="LimitLow" LimitHigh="LimitHigh"	Units="Units3" />
			<TestElement ID="ID4" SequenceNumber="4" Summary="Summary4" Detail="Detail4" LimitLow="0"		LimitHigh="1"			Units="Units4" />
			<TestElement ID="ID5" SequenceNumber="5" Summary="Summary5" Detail="Detail5" LimitLow="1"		LimitHigh="0"			Units="Units5" />
			<TestElement ID="ID6" SequenceNumber="6" Summary="Summary6" Detail="Detail6" LimitLow="1"		LimitHigh="1"			Units="Units6" />
			<TestElement ID="ID7" SequenceNumber="7" Summary="Summary7" Detail="Detail7" LimitLow="0"		LimitHigh=""			Units="Units7" />
			<TestElement ID="ID8" SequenceNumber="8" Summary="Summary8" Detail="Detail8" LimitLow=""			LimitHigh="1"			Units="Units8" />
			<TestElement ID="ID9" SequenceNumber="9" Summary="Summary9" Detail="Detail9" LimitLow="Limit"	LimitHigh="Limit"		Units="Units9" />
		<!--
		    Project ABTTestLibraryTests, class TestSupportTests, method EvaluateTestResultTest:
			Invalid Tests:
		    - LimitLow = LimitHigh = String.Empty.
            - LimitLow = String.Empty,	LimitHigh ≠ String.Empty, but won't parse to Double.
            - LimitHigh = String.Empty, LimitLow  ≠ String.Empty, but won't parse to Double.
            - LimitLow ≠ String.Empty,	LimitHigh ≠ String.Empty, neither parse to Double, & LimitLow ≠ LimitHigh.

		    Valid Tests:
			- LimitLow & LimitHigh both parse to Doubles; both low & high limits.
			- LimitLow is allowed to be > LimitHigh if both parse to Double.
			  This simply excludes a range of measurements from passing, rather than including a range from passing.
			- LimitLow is allowed to be = LimitHigh if both parse to Double.
			  This simply means only one measurement passes.
			- LimitLow parses to Double, LimitHigh = String.Empty; only low limit, no high.
			- LimitLow = String.Empty, LimitHigh parses to Double; no low limit, only high.
			- LimitLow = LimitHigh, both ≠ String.Empty, and neither parse to Double.
			  This is to verify checksums or CRCs, or to read String contents from memory, or from a file, etc.
		-->
		</TestElements>
	</TestElementsSection>
	<runtime>
		<assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
			<dependentAssembly>
				<assemblyIdentity name="Microsoft.IdentityModel.Abstractions" publicKeyToken="31bf3856ad364e35" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-6.25.0.0" newVersion="6.25.0.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="Microsoft.Identity.Client" publicKeyToken="0a613f4dd989e8ae" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-4.48.0.0" newVersion="4.48.0.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="System.Runtime.CompilerServices.Unsafe" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-6.0.0.0" newVersion="6.0.0.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="System.Memory" publicKeyToken="cc7b13ffcd2ddd51" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-4.0.1.2" newVersion="4.0.1.2" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="System.Buffers" publicKeyToken="cc7b13ffcd2ddd51" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-4.0.3.0" newVersion="4.0.3.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="System.Text.Encodings.Web" publicKeyToken="cc7b13ffcd2ddd51" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-7.0.0.0" newVersion="7.0.0.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="System.ValueTuple" publicKeyToken="cc7b13ffcd2ddd51" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-4.0.3.0" newVersion="4.0.3.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="System.Threading.Tasks.Extensions" publicKeyToken="cc7b13ffcd2ddd51" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-4.2.0.1" newVersion="4.2.0.1" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="Microsoft.Bcl.AsyncInterfaces" publicKeyToken="cc7b13ffcd2ddd51" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-7.0.0.0" newVersion="7.0.0.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="System.Text.Json" publicKeyToken="cc7b13ffcd2ddd51" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-7.0.0.0" newVersion="7.0.0.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="Azure.Core" publicKeyToken="92742159e12e44c8" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-1.26.0.0" newVersion="1.26.0.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="Azure.Identity" publicKeyToken="92742159e12e44c8" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-1.8.0.0" newVersion="1.8.0.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="Microsoft.IdentityModel.Protocols.OpenIdConnect" publicKeyToken="31bf3856ad364e35" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-6.25.0.0" newVersion="6.25.0.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="Microsoft.IdentityModel.Protocols" publicKeyToken="31bf3856ad364e35" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-6.25.0.0" newVersion="6.25.0.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="Microsoft.IdentityModel.Tokens" publicKeyToken="31bf3856ad364e35" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-6.25.0.0" newVersion="6.25.0.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="System.IdentityModel.Tokens.Jwt" publicKeyToken="31bf3856ad364e35" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-6.25.0.0" newVersion="6.25.0.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="Microsoft.IdentityModel.JsonWebTokens" publicKeyToken="31bf3856ad364e35" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-6.25.0.0" newVersion="6.25.0.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="Microsoft.IdentityModel.Logging" publicKeyToken="31bf3856ad364e35" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-6.25.0.0" newVersion="6.25.0.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="Microsoft.Extensions.Configuration.Abstractions" publicKeyToken="adb9793829ddae60" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-7.0.0.0" newVersion="7.0.0.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="Microsoft.Extensions.Configuration.Binder" publicKeyToken="adb9793829ddae60" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-7.0.0.0" newVersion="7.0.0.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="System.Memory.Data" publicKeyToken="cc7b13ffcd2ddd51" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-7.0.0.0" newVersion="7.0.0.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="System.Diagnostics.DiagnosticSource" publicKeyToken="cc7b13ffcd2ddd51" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-7.0.0.0" newVersion="7.0.0.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="Microsoft.Identity.Client.Extensions.Msal" publicKeyToken="0a613f4dd989e8ae" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-2.25.0.0" newVersion="2.25.0.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="System.Security.Cryptography.ProtectedData" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-7.0.0.0" newVersion="7.0.0.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="NuGet.Frameworks" publicKeyToken="31bf3856ad364e35" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-5.11.3.1" newVersion="5.11.3.1" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="Ivi.Driver" publicKeyToken="a128c98f1d7717c1" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-1.5.0.0" newVersion="1.5.0.0" />
			</dependentAssembly>
		</assemblyBinding>
	</runtime>
	<startup>
		<supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.8" />
	</startup>
</configuration>